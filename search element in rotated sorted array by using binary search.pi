#include<iostream>
using namespace std;
int get pivot(int arr[],int n)
{
int s=0;
int e=n-1;
int mid=s+(e-s)/2;
while(s<=e)
{
if(arr[mid]>=arr[0])
{
s=mid+1;
}
else
{
e=mid;
}
mid=s+(e-s)/2;
}
return s;
int binary search(int arr[],int e,int s,int key)
{
int start =s;
int end =e;
int mid =start +(end-start)/2;
while(start<=end>
{
return mid;
}
if(key > arr[mid])
{
start =mid+1;
}
else
{
end= mid-1;
}
mid = start +(end -start)/2;
}
return -1;
int first position(pivot <int >& arr, int n, int k)
{
int pivot = get pivot(arr,n);
if (k >= arr[pivot] && k<= arr[n-1])
{
return binary search (arr,pivot,n-1,k);
}
else
{
return binary search (arr,0,pivot-1,k);
}

